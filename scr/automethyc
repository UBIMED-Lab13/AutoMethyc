#!/bin/bash
#============================= Defect parameters ============================#
thr=4
norm="False"
filtro="False"
genome="hg19"
depth=20
quality=30
read_fastq="Paired"
combinations=10
#============================= Input Parameters ============================#
arr=()
while [[ $# -gt 0 ]]; do
	opt="$1"
	shift;
	current_arg="$1"
	case "$opt" in
"-h"|"--help"      ) echo '''
AutoMethyc version 0.1-beta
Usage
	AutoMethyc [options]
Options
	-i --input		Folder with fastq
	-o --output		Output location
	-r --ref		reference genome file
Optional arguments
	-t --threads		Number of threads (default=4)
	-n --normal		Folder with fastq of controls (default=False)
	-g --genome		Genome used for request in UCSC (default=hg19)
		other genomes:
			{hg38, hg19, hg18, hg17, hg16, mm39, mm10, mm9, mm8, mm7}
	-b --bed		File with regions of interest (default=False)
	-d --depth		Minimum depth to consider (default=20)
	-q --quality		Minimum quality (default=30)
	-c --combinations Number of outliers considered to combinations in the evaluation for logistic regression (default=10)
	--read		Read type in fastq (default=Paired)
''';  exit 1;;
"-i"|"--input"      ) input="$1"; arr+=( "-i" "$1"); shift;;
"-o"|"--output"      ) output="$1"; arr+=("-o" "$1"); shift;;
"-r"|"--reference"      ) ref="$1"; arr+=("-r" "$1"); shift;;
"-b"|"--bed"      ) filtro="$1"; arr+=("-f" "$1"); shift;;
"-t"|"--threads"      ) thr="$1"; arr+=("-t" "$1"); shift;;
"-n"|"--normal"      ) norm="$1"; arr+=("-n" "$1"); shift;;
"-g"|"--genome"       ) genome="$1"; arr+=("-g" "$1"); shift;;
"-q"|"--quality"       ) quality="$1"; arr+=("-q" "$1"); shift;;
"-d"|"--depth"       ) depth="$1"; arr+=("-d" "$1"); shift;;
"--read"       ) read_fastq="$1"; arr+=("--read" "$1"); shift;;
"-c"|"--combinations"       ) combinations="$1"; arr+=("-c" "$1"); shift;;
	esac
done
ref_folder=${ref%/*}
#============================= Presentation ============================#
figlet AutoMethyc
echo Version 0.0.5-beta
echo Universidad Nacional Autonoma de Mexico
echo '#============================Parameters==============================#'
echo 'input		|' $input
echo 'output		|' $output
echo 'reference	|'	$ref
echo 'bed		|' $filtro
echo 'threads		|' $thr
echo 'normal		|' $norm
echo 'genome		|' $genome
echo 'depth		|' $depth
echo 'quality		|' $quality
echo 'read		|' $read_fastq
echo 'combinations		|' $combinations
echo '#===================================================================#'
echo -e " automethyc ${arr[@]} \n input,$input \n output,$output \n reference,$ref \n bed,$filtro \n threads,$thr \n normal,$norm \n genome,$genome \n depth,$depth \n quaility,$quality \n combinations,$combinations" > $output/command_options.txt

#============================= Pipeline flow ============================#
start=`date +%s`

mkdir $output/CSV
mkdir $output/HTML
mkdir $output/Bismark
mkdir $output/HTML/Bismark_report
mkdir $output/VCF

if [ "$norm" = "False" ]; then
	if [ "$filtro" = "False" ]; then
		echo '================= Without controls and without filter ================='
		echo "bismark_rounded start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bismark_rounded $input $output $ref_folder $thr $quality $read_fastq cases

		echo "filter_depth start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_depth $output/Bismark/cases/bedGraph $output/CSV $depth cases

		echo "bindcov start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bindcov $output/Bismark/cases/bedGraph $output/CSV 'cases'

		echo "fastqc_extract start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		fastqc_extract $output/Bismark/cases/fastq_trimmed $output/CSV

		echo "extract_statistics_alignment start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		extract_statistics_alignment $output/Bismark/cases/fastq_trimmed $output/Bismark/cases/aligned $output/Bismark/cases/deduplicated cases $output/CSV

		echo "region_annotator start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		region_annotator $output/CSV/raw_data.csv $genome $output/CSV $thr

		echo "filter_target start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_target $output/CSV/raw_data.csv $output/CSV/annotated_regions.csv $output/CSV/

		echo "matrix_builder start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt		
		matrix_builder $output/CSV/filtered_target.csv $output/CSV/

		echo "multiqc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		multiqc $output/Bismark/cases/fastq_trimmed/*
		mv multiqc* $output/HTML

		echo "cgi_mapping start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		cgi_mapping $output/CSV/matrix_filtered_target.csv $genome $output/CSV

			echo "revelio_haplotype start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		revelio_haplotype $output/Bismark/cases/aligned $ref $output/VCF $thr

		echo "snv_count start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		snv_count $output/VCF $output/CSV cases

		echo "html_report start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		html_report $output $output/HTML False $depth
	else
		echo '================= Without controls and with filter ====================='

		echo "bismark_rounded start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bismark_rounded $input $output $ref_folder $thr $quality $read_fastq cases

		echo "filter_depth start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_depth $output/Bismark/cases/bedGraph $output/CSV $depth cases

		echo "bindcov start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bindcov $output/Bismark/cases/bedGraph $output/CSV 'cases'

		echo "fastqc_extract start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		fastqc_extract $output/Bismark/cases/fastq_trimmed $output/CSV

		echo "extract_statistics_alignment start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		extract_statistics_alignment $output/Bismark/cases/fastq_trimmed $output/Bismark/cases/aligned $output/Bismark/cases/deduplicated cases $output/CSV

		echo "region_annotator start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		region_annotator $filtro $genome $output/CSV $thr

		echo "filter_target start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_target $output/CSV/raw_data.csv $output/CSV/annotated_regions.csv $output/CSV

		echo "matrix_builder start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		matrix_builder $output/CSV/filtered_target.csv $output/CSV

		echo "multiqc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		multiqc $output/Bismark/cases/fastq_trimmed/*
		mv multiqc* $output/HTML

		echo "cgi_mapping start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		cgi_mapping $output/CSV/matrix_filtered_target.csv $genome $output/CSV


		echo "revelio_haplotype start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		revelio_haplotype $output/Bismark/cases/aligned $ref $output/VCF $thr

		echo "snv_count start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		snv_count $output/VCF $output/CSV cases

		echo "html_report start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		html_report $output $output/HTML False $depth
	fi
else
	if [ "$filtro" = "False" ]; then
		echo '==================== With controls and without filter ==================='
		mkdir $output/VCF/controls; mkdir $output/VCF/cases

		echo "bismark_rounded start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bismark_rounded $norm $output $ref_folder $thr $quality $read_fastq controls
		bismark_rounded $input $output $ref_folder $thr $quality $read_fastq cases

		echo "filter_depth start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_depth $output/Bismark/controls/bedGraph $output/Bismark/controls $depth controls
		filter_depth $output/Bismark/cases/bedGraph $output/Bismark/cases $depth cases

		echo "bindcov start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bindcov $output/Bismark/controls/bedGraph $output/Bismark/controls 'controls'		
		bindcov $output/Bismark/cases/bedGraph $output/Bismark/cases 'cases'

		echo "fastqc_extract start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		fastqc_extract $output/Bismark/controls/fastq_trimmed $output/Bismark/controls
		fastqc_extract $output/Bismark/cases/fastq_trimmed $output/Bismark/cases

		echo "extract_statistics_alignment start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		extract_statistics_alignment $output/Bismark/cases/fastq_trimmed $output/Bismark/cases/aligned $output/Bismark/cases/deduplicated cases $output/Bismark/cases
		extract_statistics_alignment $output/Bismark/controls/fastq_trimmed $output/Bismark/controls/aligned $output/Bismark/controls/deduplicated controls $output/Bismark/controls

		echo "multiqc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		multiqc $output/Bismark/controls/fastq_trimmed/*
		mv multiqc_report.html $output/HTML/multiqc_report_controls.html
		mv multiqc_data $output/HTML/multiqc_data_controls
		multiqc $output/Bismark/cases/fastq_trimmed/*
		mv multiqc_report.html $output/HTML/multiqc_report_cases.html
		mv multiqc_data $output/HTML/multiqc_data_cases

		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/raw_data.csv $output/Bismark/cases/raw_data.csv > $output/CSV/raw_data.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/count_depth_${depth}_pass.csv $output/Bismark/cases/count_depth_${depth}_pass.csv > $output/CSV/count_depth_${depth}_pass.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/fastqc_raw_data.csv $output/Bismark/cases/fastqc_raw_data.csv > $output/CSV/fastqc_raw_data.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/quality_trimming_metrics.csv $output/Bismark/cases/quality_trimming_metrics.csv > $output/CSV/quality_trimming_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/quality_alignment_metrics.csv $output/Bismark/cases/quality_alignment_metrics.csv > $output/CSV/quality_alignment_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/non_conversion_metrics.csv $output/Bismark/cases/non_conversion_metrics.csv > $output/CSV/non_conversion_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/duplicated_metrics.csv $output/Bismark/cases/duplicated_metrics.csv > $output/CSV/duplicated_metrics.csv



		echo "region_annotator start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		region_annotator $output/CSV/raw_data.csv $genome $output/CSV $thr

		echo "filter_target start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_target $output/CSV/raw_data.csv $output/CSV/annotated_regions.csv $output/CSV

		echo "matrix_builder start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		matrix_builder $output/CSV/filtered_target.csv $output/CSV

		echo "matrix_normalizer start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		matrix_normalizer $output/CSV/matrix_filtered_target.csv $output/CSV/matrix_mean_gene.csv $output/CSV

		echo "make_vectors_pca start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		make_vectors_pca $output/CSV/matrix_filtered_target_normalized.csv $output/CSV

		echo "cgi_mapping start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		cgi_mapping $output/CSV/matrix_filtered_target.csv $genome $output/CSV

		echo "unpivot_matrix_normalized start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		unpivot_matrix_normalized $output/CSV/matrix_filtered_target_normalized.csv $output/CSV $output/CSV/matrix_mean_gene_normalized.csv

		echo "volcano start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		volcano $output/CSV/filtered_target_normalized.csv $output/CSV/
		
		echo "co_methylation start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		co_methylation $output/CSV/matrix_filtered_target_normalized.csv $output/CSV/filtered_target_normalized.csv $output/CSV/ $combinations

		echo "CombiRoc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		Rscript /usr/bin/combi_roc.R $output/CSV

		echo "revelio_haplotype start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		revelio_haplotype $output/Bismark/controls/aligned $ref $output/VCF/controls $thr
		revelio_haplotype $output/Bismark/cases/aligned $ref $output/VCF/cases $thr

		echo "snv_count start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		snv_count $output/VCF/controls $output/VCF/controls controls
		snv_count $output/VCF/cases $output/VCF/cases cases
		awk '(NR == 1) || (FNR > 1)' $output/VCF/controls/snv_count.csv $output/VCF/cases/snv_count.csv > $output/CSV/snv_count.csv

		echo "html_report start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		html_report $output $output/HTML True $depth
	else
		echo '==================== With controls and with filter ==================='
		mkdir $output/VCF/controls; mkdir $output/VCF/cases

		echo "bismark_rounded start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bismark_rounded $norm $output $ref_folder $thr $quality $read_fastq controls
		bismark_rounded $input $output $ref_folder $thr $quality $read_fastq cases

		echo "filter_depthg start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_depth $output/Bismark/controls/bedGraph $output/Bismark/controls $depth controls
		filter_depth $output/Bismark/cases/bedGraph $output/Bismark/cases $depth cases

		echo "bindcov start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		bindcov $output/Bismark/controls/bedGraph $output/Bismark/controls 'controls'
		bindcov $output/Bismark/cases/bedGraph $output/Bismark/cases 'cases'

		echo "fastqc_extract start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		fastqc_extract $output/Bismark/controls/fastq_trimmed $output/Bismark/controls
		fastqc_extract $output/Bismark/cases/fastq_trimmed $output/Bismark/cases

		echo "extract_statistics_alignment start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		extract_statistics_alignment $output/Bismark/cases/fastq_trimmed $output/Bismark/cases/aligned $output/Bismark/cases/deduplicated cases $output/Bismark/cases
		extract_statistics_alignment $output/Bismark/controls/fastq_trimmed $output/Bismark/controls/aligned $output/Bismark/controls/deduplicated controls $output/Bismark/controls

		echo "multiqc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		multiqc $output/Bismark/controls/fastq_trimmed/*
		mv multiqc_report.html $output/HTML/multiqc_report_controls.html
		mv multiqc_data $output/HTML/multiqc_data_controls
		multiqc $output/Bismark/cases/fastq_trimmed/*
		mv multiqc_report.html $output/HTML/multiqc_report_cases.html
		mv multiqc_data $output/HTML/multiqc_data_cases
	
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/raw_data.csv $output/Bismark/cases/raw_data.csv > $output/CSV/raw_data.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/count_depth_${depth}_pass.csv $output/Bismark/cases/count_depth_${depth}_pass.csv > $output/CSV/count_depth_${depth}_pass.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/fastqc_raw_data.csv $output/Bismark/cases/fastqc_raw_data.csv > $output/CSV/fastqc_raw_data.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/quality_trimming_metrics.csv $output/Bismark/cases/quality_trimming_metrics.csv > $output/CSV/quality_trimming_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/quality_alignment_metrics.csv $output/Bismark/cases/quality_alignment_metrics.csv > $output/CSV/quality_alignment_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/non_conversion_metrics.csv $output/Bismark/cases/non_conversion_metrics.csv > $output/CSV/non_conversion_metrics.csv
		awk '(NR == 1) || (FNR > 1)' $output/Bismark/controls/duplicated_metrics.csv $output/Bismark/cases/duplicated_metrics.csv > $output/CSV/duplicated_metrics.csv

		echo "region_annotator start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		region_annotator $filtro $genome $output/CSV $thr

		echo "filter_target start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		filter_target $output/CSV/raw_data.csv $output/CSV/annotated_regions.csv $output/CSV

		echo "matrix_builder start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		matrix_builder $output/CSV/filtered_target.csv $output/CSV/

		echo "matrix_normalizer start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		matrix_normalizer $output/CSV/matrix_filtered_target.csv $output/CSV/matrix_mean_gene.csv $output/CSV

		echo "make_vectors_pca start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		make_vectors_pca $output/CSV/matrix_filtered_target_normalized.csv $output/CSV

		echo "cgi_mapping start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		cgi_mapping $output/CSV/matrix_filtered_target.csv $genome $output/CSV

		echo "unpivot_matrix_normalized start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		unpivot_matrix_normalized $output/CSV/matrix_filtered_target_normalized.csv $output/CSV $output/CSV/matrix_mean_gene_normalized.csv

		echo "volcano start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		volcano $output/CSV/filtered_target_normalized.csv $output/CSV/

		echo "co_methylation start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		co_methylation $output/CSV/matrix_filtered_target_normalized.csv $output/CSV/filtered_target_normalized.csv $output/CSV/ $combinations

		echo "CombiRoc start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		Rscript /usr/bin/combi_roc.R $output/CSV

		echo "revelio_haplotype start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		revelio_haplotype $output/Bismark/controls/aligned $ref $output/VCF/controls $thr
		revelio_haplotype $output/Bismark/cases/aligned $ref $output/VCF/cases $thr

		echo "snv_count start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		snv_count $output/VCF/controls $output/VCF/controls controls
		snv_count $output/VCF/cases $output/VCF/cases cases
		awk '(NR == 1) || (FNR > 1)' $output/VCF/controls/snv_count.csv $output/VCF/cases/snv_count.csv > $output/CSV/snv_count.csv

		echo "html_report start at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
		html_report $output $output/HTML True $depth
	fi
fi

#Rscript /usr/bin/Oncoprint.R $output/OncoprintRellenado.csv $output/all_sites.png
#Rscript /usr/bin/OncoprintPromedio.R $output/OncoprintPromedio.csv $output/mean.png
echo "Global workflow done at: $(date +'%H:%M:%S')" >> $output/execution_time.txt
end=`date +%s`
runtime=$((end-start))
echo 'run time = ' $runtime'(sec)'

echo '===================== AutoMethyc Complete ======================='

#table_annovar.pl example/ex2.vcf humandb/ -buildver hg19 -out myanno -remove -protocol refGene,cytoBand,exac03,avsnp147,dbnsfp30a -operation g,r,f,f,f -nastring . -vcfinput -polish
